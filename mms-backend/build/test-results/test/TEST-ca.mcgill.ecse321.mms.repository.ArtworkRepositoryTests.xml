<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ca.mcgill.ecse321.mms.repository.ArtworkRepositoryTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-11-08T01:34:07" hostname="Valadis-MacBook-Pro-2.local" time="0.226">
  <properties/>
  <testcase name="testPersistAndLoadArtwork()" classname="ca.mcgill.ecse321.mms.repository.ArtworkRepositoryTests" time="0.226"/>
  <system-out><![CDATA[2022-11-07 20:34:07.304  INFO 8484 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [ca.mcgill.ecse321.mms.repository.ArtworkRepositoryTests], using SpringBootContextLoader
2022-11-07 20:34:07.304  INFO 8484 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [ca.mcgill.ecse321.mms.repository.ArtworkRepositoryTests]: no resource found for suffixes {-context.xml, Context.groovy}.
2022-11-07 20:34:07.305  INFO 8484 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [ca.mcgill.ecse321.mms.repository.ArtworkRepositoryTests]: ArtworkRepositoryTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2022-11-07 20:34:07.310  INFO 8484 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration ca.mcgill.ecse321.mms.MmsApplication for test class ca.mcgill.ecse321.mms.repository.ArtworkRepositoryTests
2022-11-07 20:34:07.311  INFO 8484 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
2022-11-07 20:34:07.311  INFO 8484 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@662b199, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3a678e40, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@222dc36c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3445ddf2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@27b84c9a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@21abd3a3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d514259, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@77e1b84c, org.springframework.test.context.event.EventPublishingTestExecutionListener@12d8e6b6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6d911985, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@ab5dde4, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@706c2726, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@255482cb, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@40ecead5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@641255d1]
Hibernate: insert into mms (museum_closing_time, museum_opening_time, pass_fee) values (?, ?, ?)
Hibernate: insert into room (museum_management_system_museumid, room_type) values (?, 'StorageRoom')
Hibernate: insert into loan (artwork_artworkid, loan_end_date, is_loan_approved, loan_approver_staff_memberid, loan_fee, loan_requestor_visitorid, loan_start_date) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into artwork (artist, is_available_for_loan, museum_management_system_museumid, artwork_name, room_roomid, display_status) values (?, ?, ?, ?, ?, ?)
Hibernate: select artwork0_.artworkid as artworki1_0_, artwork0_.artist as artist2_0_, artwork0_.is_available_for_loan as is_avail3_0_, artwork0_.museum_management_system_museumid as museum_m6_0_, artwork0_.artwork_name as artwork_4_0_, artwork0_.room_roomid as room_roo7_0_, artwork0_.display_status as display_5_0_ from artwork artwork0_ where artwork0_.artworkid=?
Hibernate: select mms0_.museumid as museumid1_2_0_, mms0_.museum_closing_time as museum_c2_2_0_, mms0_.museum_opening_time as museum_o3_2_0_, mms0_.pass_fee as pass_fee4_2_0_ from mms mms0_ where mms0_.museumid=?
Hibernate: select room0_.roomid as roomid2_4_0_, room0_.museum_management_system_museumid as museum_m6_4_0_, room0_.display_room_number as display_3_4_0_, room0_.room_maximum_capacity as room_max4_4_0_, room0_.room_size as room_siz5_4_0_, room0_.room_type as room_typ1_4_0_, mms1_.museumid as museumid1_2_1_, mms1_.museum_closing_time as museum_c2_2_1_, mms1_.museum_opening_time as museum_o3_2_1_, mms1_.pass_fee as pass_fee4_2_1_ from room room0_ left outer join mms mms1_ on room0_.museum_management_system_museumid=mms1_.museumid where room0_.roomid=?
Hibernate: select artwork0_.artworkid as artworki1_0_, artwork0_.artist as artist2_0_, artwork0_.is_available_for_loan as is_avail3_0_, artwork0_.museum_management_system_museumid as museum_m6_0_, artwork0_.artwork_name as artwork_4_0_, artwork0_.room_roomid as room_roo7_0_, artwork0_.display_status as display_5_0_ from artwork artwork0_
Hibernate: select mms0_.museumid as museumid1_2_0_, mms0_.museum_closing_time as museum_c2_2_0_, mms0_.museum_opening_time as museum_o3_2_0_, mms0_.pass_fee as pass_fee4_2_0_ from mms mms0_ where mms0_.museumid=?
Hibernate: select room0_.roomid as roomid2_4_0_, room0_.museum_management_system_museumid as museum_m6_4_0_, room0_.display_room_number as display_3_4_0_, room0_.room_maximum_capacity as room_max4_4_0_, room0_.room_size as room_siz5_4_0_, room0_.room_type as room_typ1_4_0_, mms1_.museumid as museumid1_2_1_, mms1_.museum_closing_time as museum_c2_2_1_, mms1_.museum_opening_time as museum_o3_2_1_, mms1_.pass_fee as pass_fee4_2_1_ from room room0_ left outer join mms mms1_ on room0_.museum_management_system_museumid=mms1_.museumid where room0_.roomid=?
Hibernate: delete from artwork where artworkid=?
Hibernate: select loan0_.loanid as loanid1_1_, loan0_.artwork_artworkid as artwork_6_1_, loan0_.loan_end_date as loan_end2_1_, loan0_.is_loan_approved as is_loan_3_1_, loan0_.loan_approver_staff_memberid as loan_app7_1_, loan0_.loan_fee as loan_fee4_1_, loan0_.loan_requestor_visitorid as loan_req8_1_, loan0_.loan_start_date as loan_sta5_1_ from loan loan0_
Hibernate: delete from loan where loanid=?
Hibernate: select room0_.roomid as roomid2_4_, room0_.museum_management_system_museumid as museum_m6_4_, room0_.display_room_number as display_3_4_, room0_.room_maximum_capacity as room_max4_4_, room0_.room_size as room_siz5_4_, room0_.room_type as room_typ1_4_ from room room0_
Hibernate: select mms0_.museumid as museumid1_2_0_, mms0_.museum_closing_time as museum_c2_2_0_, mms0_.museum_opening_time as museum_o3_2_0_, mms0_.pass_fee as pass_fee4_2_0_ from mms mms0_ where mms0_.museumid=?
Hibernate: delete from room where roomid=?
Hibernate: select mms0_.museumid as museumid1_2_, mms0_.museum_closing_time as museum_c2_2_, mms0_.museum_opening_time as museum_o3_2_, mms0_.pass_fee as pass_fee4_2_ from mms mms0_
Hibernate: delete from mms where museumid=?
Hibernate: delete from mms where museumid=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
